// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028222653_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("WebApplication1.Entities.Condutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_condutor");

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("cnh");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.Property<string>("CPF_UF")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf_uf");

                    b.Property<string>("CategoriaCNH")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT")
                        .HasColumnName("categoria_cnh");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("condutor");
                });

            modelBuilder.Entity("WebApplication1.Entities.Multa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_multas");

                    b.Property<int?>("CondutorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("condutor_id");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_hora");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Endereco")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<int>("TipoMultaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_tipo_multa");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_veiculo");

                    b.HasKey("Id");

                    b.HasIndex("CondutorId");

                    b.HasIndex("TipoMultaId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("multas");
                });

            modelBuilder.Entity("WebApplication1.Entities.TipoMulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_tipo_multa");

                    b.Property<string>("CodigoMulta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("codigo_multa");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("gravidade");

                    b.Property<int>("Pontos")
                        .HasColumnType("INTEGER")
                        .HasColumnName("pontos");

                    b.Property<decimal>("ValorMulta")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT")
                        .HasColumnName("valor_multa");

                    b.HasKey("Id");

                    b.ToTable("tipo_multa");
                });

            modelBuilder.Entity("WebApplication1.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("senha");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("WebApplication1.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_veiculo");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("placa");

                    b.Property<string>("Proprietario")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("proprietario");

                    b.Property<string>("Tipo")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("veiculos");
                });

            modelBuilder.Entity("WebApplication1.Entities.Multa", b =>
                {
                    b.HasOne("WebApplication1.Entities.Condutor", "Condutor")
                        .WithMany("Multas")
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApplication1.Entities.TipoMulta", "TipoMulta")
                        .WithMany("Multas")
                        .HasForeignKey("TipoMultaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Entities.Usuario", "Usuario")
                        .WithMany("Multas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Entities.Veiculo", "Veiculo")
                        .WithMany("Multas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condutor");

                    b.Navigation("TipoMulta");

                    b.Navigation("Usuario");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("WebApplication1.Entities.Condutor", b =>
                {
                    b.Navigation("Multas");
                });

            modelBuilder.Entity("WebApplication1.Entities.TipoMulta", b =>
                {
                    b.Navigation("Multas");
                });

            modelBuilder.Entity("WebApplication1.Entities.Usuario", b =>
                {
                    b.Navigation("Multas");
                });

            modelBuilder.Entity("WebApplication1.Entities.Veiculo", b =>
                {
                    b.Navigation("Multas");
                });
#pragma warning restore 612, 618
        }
    }
}
